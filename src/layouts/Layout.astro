---
import SEO from "../components/SEO.astro";
import { type SEOProps } from "../data/seo";
import Footer from "../components/Footer.astro";
interface Props {
  seo?: Partial<SEOProps>;
}

interface NavLink {
  href: string;
  text: string;
}

const { seo } = Astro.props;

const navLinks: NavLink[] = [
  { href: "/", text: "Home" },
  { href: "/who-we-are", text: "Who We Are" },
  { href: "/what-we-do", text: "What We Do" },
  { href: "/territory", text: "Territory We Cover" },
  { href: "/contact", text: "Contact Us" },
];

// Obtener la ruta actual para el estado activo
const currentPath = Astro.url.pathname;
---

<!doctype html>
<html lang="en" class="scroll-smooth">
  <head>
    <SEO {...seo} />
  </head>
  <body class="min-h-screen bg-white flex flex-col">
    <!-- Header con navegación -->
    <header
      class="fixed top-0 left-0 right-0 z-50 bg-white/90 backdrop-blur-sm shadow-sm">
      <nav class="container mx-auto px-8 py-2">
        <div class="flex items-center justify-between">
          <!-- Logo -->
          

          <!-- Navegación Desktop -->
          <div class="hidden md:flex items-center space-x-8">
            {
              navLinks.map((link) => (
                <a
                  href={link.href}
                  class={`nav-link relative px-2 py-1 ${
                    currentPath === link.href ||
                    (currentPath === "/" && link.href === "/")
                      ? "active"
                      : ""
                  }`}>
                  {link.text}
                  <span class="nav-indicator" />
                </a>
              ))
            }
          </div>
          <a
          href="/"
          class="flex items-center space-x-2"
          aria-label="NCR Trucking Home">
          <img
            src="/Logo-Short.webp"
            alt="NCR Trucking Inc Logo"
            
            width="200"
          />
        </a>
          <!-- Botón Mobile Menu -->
          <button
            id="mobile-menu-button"
            class="md:hidden text-primary p-2"
            aria-label="Toggle menu"
            type="button">
            <svg
              xmlns="http://www.w3.org/2000/svg"
              class="h-6 w-6"
              fill="none"
              viewBox="0 0 24 24"
              stroke="currentColor">
              <path
                stroke-linecap="round"
                stroke-linejoin="round"
                stroke-width="2"
                d="M4 6h16M4 12h16m-16 6h16"></path>
            </svg>
          </button>
        </div>

        <!-- Mobile Menu -->
        <div
          id="mobile-menu"
          class="hidden md:hidden absolute top-full left-0 right-0 bg-white shadow-lg">
          <div class="flex flex-col space-y-4 p-4">
            {
              navLinks.map((link) => (
                <a
                  href={link.href}
                  class={`nav-link relative px-2 py-1 ${
                    currentPath === link.href ||
                    (currentPath === "/" && link.href === "/")
                      ? "active"
                      : ""
                  }`}>
                  {link.text}
                  <span class="nav-indicator" />
                </a>
              ))
            }
          </div>
        </div>
      </nav>
    </header>

    <!-- Contenido principal -->
    <main class="flex-grow pt-16">
      <slot />
    </main>
    <Footer />

    <!-- Script para el menú mobile -->
    <script>
      const mobileMenuButton = document.getElementById(
        "mobile-menu-button"
      ) as HTMLButtonElement | null;
      const mobileMenu = document.getElementById(
        "mobile-menu"
      ) as HTMLDivElement | null;

      mobileMenuButton?.addEventListener("click", () => {
        mobileMenu?.classList.toggle("hidden");
      });

      // Cerrar menú al hacer click fuera
      document.addEventListener("click", (e) => {
        const target = e.target as HTMLElement;
        if (
          !target.closest("#mobile-menu") &&
          !target.closest("#mobile-menu-button")
        ) {
          mobileMenu?.classList.add("hidden");
        }
      });

      // Cerrar menú al cambiar el tamaño de la ventana
      window.addEventListener("resize", () => {
        if (window.innerWidth >= 768) {
          mobileMenu?.classList.add("hidden");
        }
      });
    </script>

    <style is:global>
      /* Base */
      :root {
        --color-primary: #1a1a1a;
        --color-accent: #4a90e2;
      }

      /* Navegación */
      .nav-link {
        @apply text-primary hover:text-accent transition-colors duration-200 font-medium;
      }

      .nav-link.active {
        @apply text-accent;
      }

      .nav-indicator {
        @apply absolute bottom-0 left-0 w-full h-0.5 bg-accent 
               scale-x-0 transition-transform duration-300 origin-left;
      }

      .nav-link.active .nav-indicator,
      .nav-link:hover .nav-indicator {
        @apply scale-x-100;
      }

      /* Scrollbar personalizado */
      ::-webkit-scrollbar {
        @apply w-2;
      }

      ::-webkit-scrollbar-track {
        @apply bg-gray-100;
      }

      ::-webkit-scrollbar-thumb {
        @apply bg-gray-300 rounded-full hover:bg-gray-400 transition-colors;
      }

      /* Estilos móviles */
      @media (max-width: 768px) {
        .nav-indicator {
          @apply w-1 h-full right-0 left-auto;
          transform-origin: top;
        }
      }
    </style>
  </body>
</html>