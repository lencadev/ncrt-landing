---
import Layout from "../layouts/Layout.astro";
import { routesSEO } from "../data/seo";
import { Image } from "astro:assets";
import Map from "../components/Map.astro";
// Interfaces
interface ContactInfo {
  type: string;
  label: string;
  value: string;
  link?: string;
  icon: string;
  availability?: string;
}

interface OfficeHours {
  day: string;
  hours: string;
  status: "open" | "closed" | "limited";
}

interface LocationInfo {
  name: string;
  address: {
    street: string;
    city: string;
    state: string;
    zip: string;
  };
  coordinates: {
    lat: number;
    lng: number;
  };
  type: "headquarters" | "terminal" | "office";
}

interface FAQ {
  question: string;
  answer: string;
  category: "general" | "quotes" | "emergency";
}

interface ServiceType {
  id: string;
  name: string;
  description: string;
  leadTime: string;
  icon: string;
}

interface EmergencyContact {
  name: string;
  position: string;
  phone: string;
  email: string;
  availability: string;
}

// Datos
const contactInfo: ContactInfo[] = [
  {
    type: "phone",
    label: "Main Office",
    value: "773-819-7400",
    link: "tel:+17738197400",
    icon: `<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 5a2 2 0 012-2h3.28a1 1 0 01.948.684l1.498 4.493a1 1 0 01-.502 1.21l-2.257 1.13a11.042 11.042 0 005.516 5.516l1.13-2.257a1 1 0 011.21-.502l4.493 1.498a1 1 0 01.684.949V19a2 2 0 01-2 2h-1C9.716 21 3 14.284 3 6V5z" />`,
    availability: "24/7",
  },
  {
    type: "phone",
    label: "Dispatch",
    value: "773-703-1227",
    link: "tel:+17737031227",
    icon: `<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 10l4.553-2.276A1 1 0 0121 8.618v6.764a1 1 0 01-1.447.894L15 14M5 18h8a2 2 0 002-2V8a2 2 0 00-2-2H5a2 2 0 00-2 2v8a2 2 0 002 2z" />`,
    availability: "24/7",
  },
  {
    type: "phone",
    label: "Safety Hotline",
    value: "773-827-3272",
    link: "tel:+17738273272",
    icon: `<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z" />`,
    availability: "24/7",
  },
  {
    type: "email",
    label: "General Inquiries",
    value: "info@ncrtrucking.com",
    link: "mailto:info@ncrtrucking.com",
    icon: `<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 8l7.89 5.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z" />`,
  },
];

const officeHours: OfficeHours[] = [
  { day: "Monday", hours: "7:00 AM - 6:00 PM", status: "open" },
  { day: "Tuesday", hours: "7:00 AM - 6:00 PM", status: "open" },
  { day: "Wednesday", hours: "7:00 AM - 6:00 PM", status: "open" },
  { day: "Thursday", hours: "7:00 AM - 6:00 PM", status: "open" },
  { day: "Friday", hours: "7:00 AM - 6:00 PM", status: "open" },
  { day: "Saturday", hours: "On Call Only", status: "limited" },
  { day: "Sunday", hours: "Closed", status: "closed" },
];

const locations: LocationInfo[] = [
  {
    name: "Chicago Headquarters",
    address: {
      street: "123 Logistics Way",
      city: "Chicago",
      state: "IL",
      zip: "60618",
    },
    coordinates: {
      lat: 41.8781,
      lng: -87.6298,
    },
    type: "headquarters",
  },
  {
    name: "Detroit Terminal",
    address: {
      street: "456 Transport Drive",
      city: "Detroit",
      state: "MI",
      zip: "48201",
    },
    coordinates: {
      lat: 42.3314,
      lng: -83.0458,
    },
    type: "terminal",
  },
];

const faqs: FAQ[] = [
  {
    question: "How do I get a quote for transportation services?",
    answer:
      "You can request a quote through our online form, call our main office, or email us with your shipment details. We typically respond within 2 hours during business hours.",
    category: "quotes",
  },
  {
    question: "What information do I need for a quote?",
    answer:
      "Please provide pickup/delivery locations, cargo type, weight, dimensions, preferred delivery date, and any special handling requirements.",
    category: "quotes",
  },
  {
    question: "How do I schedule an emergency pickup?",
    answer:
      "Contact our 24/7 dispatch number at 773-703-1227 for immediate assistance with emergency pickups.",
    category: "emergency",
  },
];

const serviceTypes: ServiceType[] = [
  {
    id: "standard",
    name: "Standard Transport",
    description: "Regular scheduled transport services with 24-48 hour notice",
    leadTime: "2-3 business days",
    icon: `<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 17a2 2 0 11-4 0 2 2 0 014 0zM19 17a2 2 0 11-4 0 2 2 0 014 0z" />`,
  },
  {
    id: "expedited",
    name: "Expedited Service",
    description: "Fast-track shipping for time-sensitive deliveries",
    leadTime: "Same day - Next day",
    icon: `<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 10V3L4 14h7v7l9-11h-7z" />`,
  },
  {
    id: "specialized",
    name: "Specialized Transport",
    description: "Custom solutions for oversized and special handling needs",
    leadTime: "3-5 business days",
    icon: `<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m5.618-4.016A11.955 11.955 0 0112 2.944a11.955 11.955 0 01-8.618 3.04A12.02 12.02 0 003 9c0 5.591 3.824 10.29 9 11.622 5.176-1.332 9-6.03 9-11.622 0-1.042-.133-2.052-.382-3.016z" />`,
  },
];

const emergencyContacts: EmergencyContact[] = [
  {
    name: "John Smith",
    position: "Emergency Response Manager",
    phone: "773-555-0123",
    email: "emergency@ncrtrucking.com",
    availability: "24/7",
  },
  {
    name: "Sarah Johnson",
    position: "Night Operations Supervisor",
    phone: "773-555-0124",
    email: "nightops@ncrtrucking.com",
    availability: "6PM - 6AM",
  },
];

const EMAILJS_PUBLIC_KEY = import.meta.env.PUBLIC_EMAILJS_PUBLIC_KEY;
const EMAILJS_SERVICE_ID = import.meta.env.PUBLIC_EMAILJS_SERVICE_ID;
const EMAILJS_TEMPLATE_ID = import.meta.env.PUBLIC_EMAILJS_TEMPLATE_ID;
---

<Layout seo={routesSEO.territory}>
  <!-- Hero Section -->
  <section class="relative py-24 bg-primary text-white overflow-hidden">
    <div class="absolute inset-0 z-0">
      <Image
        src="/images/contact/hero-bg.webp"
        alt="24/7 Logistics Support"
        width={1920}
        height={1080}
        class="w-full h-full object-cover opacity-20"
      />
    </div>
    <div class="container mx-auto px-4 relative z-10">
      <div class="max-w-3xl mx-auto text-center">
        <h1 class="text-4xl md:text-6xl font-bold mb-6 animate-fade-in">
          Always Here When You Need Us
        </h1>
        <p class="text-xl text-gray-300 mb-8 animate-fade-up animation-delay-200">
          24/7 support across the Midwest with dedicated teams ready to handle your shipping needs anytime, anywhere.
        </p>
        <div class="flex flex-wrap justify-center gap-4 animate-fade-up animation-delay-400">
          <a href="#urgent" class="bg-red-600 hover:bg-red-700 text-white px-8 py-3 rounded-lg font-medium transition-colors duration-300">
            Urgent Shipment
          </a>
          <a href="#quote" class="bg-white/10 hover:bg-white/20 text-white px-8 py-3 rounded-lg font-medium transition-colors duration-300">
            Request Quote
          </a>
        </div>
      </div>
    </div>
  </section>
  <!-- Contact Information Section -->
  <section class="py-20 bg-white">
    <div class="container mx-auto px-4">
      <div class="grid grid-cols-1 lg:grid-cols-3 gap-8">
        <!-- Contact Form -->
        <div class="lg:col-span-2 bg-gray-50 rounded-lg p-8 shadow-lg">
          <h2 class="text-3xl font-bold mb-6">Send Us a Message</h2>
          <form id="contact-form" class="space-y-6">
            <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
              <div>
                <label for="name" class="block text-sm font-medium text-gray-700 mb-1">
                  Full Name
                </label>
                <input
                  type="text"
                  id="name"
                  name="from_name"
                  class="w-full px-4 py-2 border border-gray-300 rounded-md focus:ring-accent focus:border-accent"
                  required
                />
              </div>
              <div>
                <label for="company" class="block text-sm font-medium text-gray-700 mb-1">
                  Company Name
                </label>
                <input
                  type="text"
                  id="company"
                  name="company"
                  class="w-full px-4 py-2 border border-gray-300 rounded-md focus:ring-accent focus:border-accent"
                />
              </div>
            </div>

            <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
              <div>
                <label for="email" class="block text-sm font-medium text-gray-700 mb-1">
                  Email Address
                </label>
                <input
                  type="email"
                  id="email"
                  name="from_email"
                  class="w-full px-4 py-2 border border-gray-300 rounded-md focus:ring-accent focus:border-accent"
                  required
                />
              </div>
              <div>
                <label for="phone" class="block text-sm font-medium text-gray-700 mb-1">
                  Phone Number
                </label>
                <input
                  type="tel"
                  id="phone"
                  name="phone"
                  class="w-full px-4 py-2 border border-gray-300 rounded-md focus:ring-accent focus:border-accent"
                  required
                />
              </div>
            </div>

            <div>
              <label for="service" class="block text-sm font-medium text-gray-700 mb-1">
                Service Type
              </label>
              <select
                id="service"
                name="service"
                class="w-full px-4 py-2 border border-gray-300 rounded-md focus:ring-accent focus:border-accent"
                required
              >
                <option value="">Select a service</option>
                {serviceTypes.map((service) => (
                  <option value={service.id}>{service.name}</option>
                ))}
              </select>
            </div>

            <div>
              <label for="message" class="block text-sm font-medium text-gray-700 mb-1">
                Message
              </label>
              <textarea
                id="message"
                name="message"
                rows="4"
                class="w-full px-4 py-2 border border-gray-300 rounded-md focus:ring-accent focus:border-accent"
                required
              ></textarea>
            </div>

            <!-- Añade el div para el mensaje de estado -->
            <div id="form-status" class="hidden">
              <p class="text-center py-2 px-4 rounded-md"></p>
            </div>

            <button
              type="submit"
              id="submit-btn"
              class="w-full bg-accent hover:bg-accent/90 text-white py-3 px-6 rounded-md transition-colors duration-300"
            >
              Send Message
            </button>
          </form>
        </div>

        <!-- Contact Information -->
        <div class="space-y-8">
          {/* Contact Cards */}
          {
            contactInfo.map((info, index) => (
              <div
                class="bg-gray-50 rounded-lg p-6 shadow-lg hover:shadow-xl transition-all duration-300 animate-fade-up"
                style={`animation-delay: ${index * 150}ms`}>
                <div class="flex items-start">
                  <div class="flex-shrink-0">
                    <div class="w-12 h-12 bg-accent/10 rounded-lg flex items-center justify-center">
                      <svg
                        class="w-6 h-6 text-accent"
                        fill="none"
                        viewBox="0 0 24 24"
                        stroke="currentColor"
                        set:html={info.icon}
                      />
                    </div>
                  </div>
                  <div class="ml-4">
                    <h3 class="text-lg font-semibold">{info.label}</h3>
                    {info.link ? (
                      <a
                        href={info.link}
                        class="text-accent hover:text-accent/80 transition-colors duration-300">
                        {info.value}
                      </a>
                    ) : (
                      <p class="text-gray-600">{info.value}</p>
                    )}
                    {info.availability && (
                      <p class="text-sm text-gray-500 mt-1">
                        Available: {info.availability}
                      </p>
                    )}
                  </div>
                </div>
              </div>
            ))
          }

          {/* Office Hours */}
          <div class="bg-gray-50 rounded-lg p-6 shadow-lg">
            <h3 class="text-lg font-semibold mb-4">Office Hours</h3>
            <div class="space-y-2">
              {
                officeHours.map((schedule) => (
                  <div class="flex justify-between items-center">
                    <span class="text-gray-600">{schedule.day}</span>
                    <span
                      class={`px-3 py-1 rounded-full text-sm font-medium ${
                        schedule.status === "open"
                          ? "bg-green-100 text-green-800"
                          : schedule.status === "limited"
                            ? "bg-yellow-100 text-yellow-800"
                            : "bg-red-100 text-red-800"
                      }`}>
                      {schedule.hours}
                    </span>
                  </div>
                ))
              }
            </div>
          </div>
        </div>
      </div>
    </div>
  </section>

  <!-- Map Section -->
  <section class="py-20 bg-gray-50">
    <div class="container mx-auto px-4">
      <div class="text-center max-w-3xl mx-auto mb-16">
        <h2 class="text-4xl font-bold mb-6">Our Locations</h2>
        <p class="text-lg text-gray-600">
          Find our strategically located facilities serving the Midwest region.
        </p>
      </div>

      <Map
        center={[41.8781, -87.6298]}
        zoom={6}
        markers={locations.map((location) => ({
          position: [location.coordinates.lat, location.coordinates.lng],
          title: location.name,
          type: location.type,
        }))}
      />

      <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8 mt-12">
        {
          locations.map((location) => (
            <div class="bg-white rounded-lg shadow-lg p-6">
              <h3 class="text-xl font-semibold mb-2">{location.name}</h3>
              <p class="text-gray-600">
                {location.address.street}
                <br />
                {location.address.city}, {location.address.state}{" "}
                {location.address.zip}
              </p>
            </div>
          ))
        }
      </div>
    </div>
  </section>

  <!-- Emergency Contact Section -->
  <section class="py-20 bg-white">
    <div class="container mx-auto px-4">
      <div class="max-w-3xl mx-auto">
        <div class="bg-red-50 rounded-lg p-8 border-l-4 border-red-500">
          <h2 class="text-2xl font-bold text-red-700 mb-4">
            Emergency Contact
          </h2>
          <p class="text-gray-700 mb-6">
            For urgent assistance outside regular business hours, please contact
            our emergency response team.
          </p>

          <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
            {
              emergencyContacts.map((contact) => (
                <div class="bg-white rounded-lg p-4 shadow-md">
                  <h3 class="font-semibold text-gray-800">{contact.name}</h3>
                  <p class="text-sm text-gray-600 mb-2">{contact.position}</p>
                  <div class="space-y-1">
                    <a
                      href={`tel:${contact.phone}`}
                      class="flex items-center text-red-600 hover:text-red-700">
                      <svg
                        class="w-4 h-4 mr-2"
                        fill="none"
                        viewBox="0 0 24 24"
                        stroke="currentColor">
                        <path
                          stroke-linecap="round"
                          stroke-linejoin="round"
                          stroke-width="2"
                          d="M3 5a2 2 0 012-2h3.28a1 1 0 01.948.684l1.498 4.493a1 1 0 01-.502 1.21l-2.257 1.13a11.042 11.042 0 005.516 5.516l1.13-2.257a1 1 0 011.21-.502l4.493 1.498a1 1 0 01.684.949V19a2 2 0 01-2 2h-1C9.716 21 3 14.284 3 6V5z"
                        />
                      </svg>
                      {contact.phone}
                    </a>
                    <a
                      href={`mailto:${contact.email}`}
                      class="flex items-center text-red-600 hover:text-red-700">
                      <svg
                        class="w-4 h-4 mr-2"
                        fill="none"
                        viewBox="0 0 24 24"
                        stroke="currentColor">
                        <path
                          stroke-linecap="round"
                          stroke-linejoin="round"
                          stroke-width="2"
                          d="M3 8l7.89 5.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z"
                        />
                      </svg>
                      {contact.email}
                    </a>
                    <p class="text-sm text-gray-500">
                      Available: {contact.availability}
                    </p>
                  </div>
                </div>
              ))
            }
          </div>
        </div>
      </div>
    </div>
  </section>

  <!-- FAQ Section -->
  <section class="py-20 bg-gray-50">
    <div class="container mx-auto px-4">
      <div class="text-center max-w-3xl mx-auto mb-16">
        <h2 class="text-4xl font-bold mb-6">Frequently Asked Questions</h2>
        <p class="text-lg text-gray-600">
          Find quick answers to common questions about contacting and working
          with us.
        </p>
      </div>

      <div class="max-w-3xl mx-auto">
        <div class="space-y-6">
          {
            faqs.map((faq) => (
              <div class="bg-white rounded-lg shadow-lg p-6">
                <h3 class="text-xl font-semibold mb-3">{faq.question}</h3>
                <p class="text-gray-600">{faq.answer}</p>
                <span class="inline-block mt-3 text-sm px-3 py-1 bg-accent/10 text-accent rounded-full">
                  {faq.category}
                </span>
              </div>
            ))
          }
        </div>
      </div>
    </div>
  </section>
</Layout>
<!-- Añade el script de EmailJS en el head -->
<script is:inline src="https://cdn.jsdelivr.net/npm/@emailjs/browser@3/dist/email.min.js"></script>

<!-- Añade el script para manejar el formulario -->
<script define:vars={{ EMAILJS_PUBLIC_KEY, EMAILJS_SERVICE_ID, EMAILJS_TEMPLATE_ID }}>
// Inicializar EmailJS
(function() {
  emailjs.init(EMAILJS_PUBLIC_KEY);
})();

// Elementos del DOM
const form = document.getElementById('contact-form');
const submitButton = document.getElementById('submit-btn');
const formStatus = document.getElementById('form-status');

// Función para mostrar mensajes de estado
function showStatus(message, type) {
  if (!formStatus) return;
  
  formStatus.classList.remove('hidden');
  const statusText = formStatus.querySelector('p');
  if (statusText) {
    statusText.textContent = message;
    statusText.className = `text-center py-2 px-4 rounded-md ${
      type === 'success' 
        ? 'bg-green-100 text-green-800' 
        : 'bg-red-100 text-red-800'
    }`;
  }

  // Ocultar el mensaje después de 5 segundos
  setTimeout(() => {
    formStatus.classList.add('hidden');
  }, 5000);
}

// Manejar el envío del formulario
if (form) {
  form.addEventListener('submit', async (e) => {
    e.preventDefault();

    // Deshabilitar el botón y cambiar el texto
    if (submitButton) {
      submitButton.disabled = true;
      submitButton.textContent = 'Sending...';
    }

    try {
      // Enviar el email usando EmailJS
      const result = await emailjs.sendForm(
        EMAILJS_SERVICE_ID,
        EMAILJS_TEMPLATE_ID,
        form
      );

      if (result.status === 200) {
        showStatus('Message sent successfully!', 'success');
        form.reset();
      } else {
        throw new Error('Failed to send message');
      }
    } catch (error) {
      console.error('Error:', error);
      showStatus('Failed to send message. Please try again.', 'error');
    } finally {
      // Restaurar el botón
      if (submitButton) {
        submitButton.disabled = false;
        submitButton.textContent = 'Send Message';
      }
    }
  });
}
</script>

<style>
  .animate-fade-in {
    opacity: 0;
    animation: fadeIn 1s ease-out forwards;
  }

  .animate-fade-up {
    opacity: 0;
    transform: translateY(20px);
    animation: fadeUp 0.6s ease-out forwards;
  }

  .animation-delay-200 {
    animation-delay: 200ms;
  }

  .animation-delay-400 {
    animation-delay: 400ms;
  }

  input:focus,
  select:focus,
  textarea:focus {
    outline: 2px solid rgba(74, 144, 226, 0.2);
    outline-offset: 2px;
  }

  .contact-shadow {
    box-shadow:
      0 4px 6px -1px rgba(0, 0, 0, 0.1),
      0 2px 4px -1px rgba(0, 0, 0, 0.06);
  }

  .contact-shadow:hover {
    box-shadow:
      0 10px 15px -3px rgba(0, 0, 0, 0.1),
      0 4px 6px -2px rgba(0, 0, 0, 0.05);
  }

  @keyframes fadeIn {
    from {
      opacity: 0;
    }
    to {
      opacity: 1;
    }
  }

  @keyframes fadeUp {
    from {
      opacity: 0;
      transform: translateY(20px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  /* Estilos para el mapa de Leaflet */
  :global(.leaflet-control-zoom) {
    border: none !important;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1) !important;
  }

  :global(.leaflet-control-zoom-in),
  :global(.leaflet-control-zoom-out) {
    background-color: white !important;
    color: #4a90e2 !important;
    border: 1px solid #e2e8f0 !important;
    width: 30px !important;
    height: 30px !important;
    line-height: 30px !important;
    border-radius: 6px !important;
    margin-bottom: 5px !important;
  }

  :global(.leaflet-control-zoom-in:hover),
  :global(.leaflet-control-zoom-out:hover) {
    background-color: #f8fafc !important;
    color: #2563eb !important;
  }

  :global(.leaflet-container) {
    font-family: inherit !important;
  }

  :global(.leaflet-popup-content-wrapper) {
    border-radius: 0.75rem !important;
    box-shadow:
      0 4px 6px -1px rgba(0, 0, 0, 0.1),
      0 2px 4px -1px rgba(0, 0, 0, 0.06) !important;
  }

  :global(.leaflet-popup-content) {
    margin: 1rem !important;
  }

  :global(.leaflet-popup-tip) {
    background-color: white !important;
    box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1) !important;
  }
</style>
